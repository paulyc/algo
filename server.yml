---
- name: Configure the server and install required software
  hosts: vpn-host
  gather_facts: false
  tags: algo
  become: true
  vars_files:
    - config.cfg

  roles:
    - role: dns_adblocking
      when: algo_local_dns
      tags: dns_adblocking
    - role: ssh_tunneling
      when: algo_ssh_tunneling
      tags: ssh_tunneling
    - role: wireguard
      tags: [ 'vpn', 'wireguard' ]
      when: wireguard_enabled
    - role: vpn
      tags: vpn

  post_tasks:
    - block:
      - name: Delete the CA key
        local_action:
          module: file
          path: "configs/{{ IP_subject_alt_name }}/pki/private/cakey.pem"
          state: absent
        become: false
        when: not algo_store_cakey

      - name: Dump the configuration
        local_action:
          module: copy
          dest: "configs/{{ IP_subject_alt_name }}/config.yml"
          content: |
            server_ip: {{ ansible_ssh_host }}
            server_user: {{ ansible_ssh_user }}
            ansible_ssh_private_key_file: {{ ansible_ssh_private_key_file|default(SSH_keys.private) }}
            algo_provider: {{ algo_provider }}
            algo_server_name: {{ algo_server_name }}
            algo_ondemand_cellular: {{ algo_ondemand_cellular }}
            algo_ondemand_wifi: {{ algo_ondemand_wifi }}
            algo_ondemand_wifi_exclude: {{ algo_ondemand_wifi_exclude }}
            algo_local_dns: {{ algo_local_dns }}
            algo_ssh_tunneling: {{ algo_ssh_tunneling }}
            algo_windows: {{ algo_windows }}
            algo_store_cakey: {{ algo_store_cakey }}
            ca_password: {% if tests|default(false) %}{{ CA_password }}{% endif %}
        become: false

      - debug:
          msg:
            - "{{ congrats.common.split('\n') }}"
            - "    {{ congrats.p12_pass }}"
            - "    {% if algo_store_cakey %}{{ congrats.ca_key_pass }}{% endif %}"
            - "    {% if cloud_deployment is defined %}{{ congrats.ssh_access }}{% endif %}"
      tags: always
      rescue:
        - debug: var=fail_hint
          tags: always
        - fail:
          tags: always
